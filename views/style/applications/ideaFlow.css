* {
    --blue: #1e54e3;
    --orange: #f0932b;
    box-sizing: border-box;
}

body {
    display: flex;
}

.board {
    width: 100%;
    overflow: hidden;
    height: 100vh;
}

h4,
p {
    margin: 0;
}

.MindMapBlock {
    position: relative;

    background: white;
    border: 1px solid #ebebeb;
    border-radius: 10px;

    padding: 25px;

    width: fit-content;

    font-family: 'Plus Jakarta Sans';

    user-select: none;

    min-width: 80px;
    min-height: 80px;

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 5px;
}

.MindMapBlockTitle {
    font-size: 1.15em;
}

.MindMapBlockDescription {
    font-size: 1.1em;
}

.connector,
.resizer {
    z-index: -1;

    width: 40px;
    height: 40px;

    border: none;

    background: var(--blue);

    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;

    padding: 0;

    transition: 0.2s;

    user-select: none;
}

.resizer {
    background: var(--orange);
}

.connector img,
.resizer img {
    pointer-events: none;
}

.connector.left {
    top: calc(50% - 20px);
}

.connector.right {
    top: calc(50% - 20px);
}

.resizer {
    top: calc(50% + 5px);
}

.connector.top,
.connector.bottom {
    left: calc(50% - 20px);
}

.connector.left {
    left: 0;
    border-top-left-radius: 50%;
    border-bottom-left-radius: 50%;

    padding-left: 5px;
}

.connector.right,
.resizer {
    right: 0;
    border-top-right-radius: 50%;
    border-bottom-right-radius: 50%;

    padding-right: 5px;
}

.connector.top {
    top: 0;
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;

    padding-top: 5px;
}

.connector.bottom {
    bottom: 0;
    border-bottom-left-radius: 50%;
    border-bottom-right-radius: 50%;

    padding-bottom: 5px;
}

#blocks:not(.receiving) .MindMapBlock:hover .connector.left,
.connector.left.connecting,
.receiving.horizontal .MindMapBlock:not(.connectingBlock) .connector.left {
    transform: translate(-40px);
}

#blocks:not(.receiving) .MindMapBlock:hover .connector.right,
#blocks:not(.receiving) .MindMapBlock:hover .resizer,
.connector.right.connecting,
.receiving.horizontal .MindMapBlock:not(.connectingBlock) .connector.right {
    transform: translate(40px);
}

#blocks:not(.receiving) .MindMapBlock:hover .connector.right {
    top: calc(50% - 45px);
}

#blocks:not(.receiving) .MindMapBlock:hover .connector.top,
.connector.top.connecting,
.receiving.vertical .MindMapBlock:not(.connectingBlock) .connector.top {
    transform: translateY(-40px);
}

#blocks:not(.receiving) .MindMapBlock:hover .connector.bottom,
.connector.bottom.connecting,
.receiving.vertical .MindMapBlock:not(.connectingBlock) .connector.bottom {
    transform: translateY(40px);
}

.receiving.vertical .connector.top,
.receiving.vertical .connector.bottom,
.receiving.horizontal .connector.left,
.receiving.horizontal .connector.right {
    background: var(--orange);
}

.receiving.vertical .MindMapBlock:not(.connectingBlock) .connector.top img,
.receiving.vertical .MindMapBlock:not(.connectingBlock) .connector.bottom img,
.receiving.horizontal .MindMapBlock:not(.connectingBlock) .connector.left img,
.receiving.horizontal .MindMapBlock:not(.connectingBlock) .connector.right img {
    transform: rotate(180deg);
}

.MindMapLinkPath {
    fill: none;
    stroke: #000;
    stroke-width: 5px;
    stroke-linecap: round;

    transition: stroke-width 0.3s, stroke 0.3s;
}

.MindMapLinkPathHitbox {
    stroke-width: 10px;
    stroke: transparent;
    fill: none;

    cursor: pointer;
}

.MindMapLink:hover .MindMapLinkPath,
.MindMapLink[data-big='true'] .MindMapLinkPathHitbox {
    marker-end: url(#arrow_hover);
    stroke: var(--orange);
    stroke-width: 8px;
}

@media screen and (max-width: 600px) {
    body {
        flex-direction: column-reverse;
    }
}
